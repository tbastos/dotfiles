##############################################################################
# General

[[plugins]]
repository = 'tpope/vim-repeat'

[[plugins]]
repository = 'tpope/vim-unimpaired'

[[plugins]]
repository = 'bufkill.vim'
commands = ['BD']

[[plugins]]
repository = 'matchit.zip'


##############################################################################
# Shell

[[plugins]]
repository = 'Shougo/vimfiler'
depends = 'Shougo/unite.vim'
mappings = '<Plug>'
explorer = 1

  [plugins.commands]
  name = ['VimFiler', 'VimFilerExplorer']
  complete = 'customlist,vimfiler#complete'

[[plugins]]
repository = 'tpope/vim-dispatch'
commands = ['Dispatch', 'Dispatch!', 'Make', 'Make!']

[[plugins]]
repository = 'tyru/open-browser.vim'
mappings = '<Plug>'


##############################################################################
# UI

[[plugins]]
repository = 't9md/vim-choosewin' # visual window selection
mappings = '<Plug>'

[[plugins]]
repository = 'regedarek/ZoomWin' # zoom in/out a split with <c-w>-o
mappings = ['<C-w>o']

[[plugins]]
repository = 'junegunn/goyo.vim' # distraction free editing
commands = 'Goyo'
gui = 1

[[plugins]]
repository = 'junegunn/limelight.vim' # focused writing
commands = 'Limelight'

[[plugins]]
repository = 'kergoth/vim-hilinks' # debug syntax highlighting
commands = ['HLT', 'HLT!']


##############################################################################
# Search and Motion

[[plugins]]
repository = 'justinmk/vim-sneak'
depends = 'tpope/vim-repeat'
mappings = ['s', 'S']

[[plugins]]
repository = 'Shougo/unite.vim'

  [plugins.commands]
  name = [
    'Unite',
    'UniteWithBufferDir',
    'UniteWithCurrentDir',
    'UniteWithProjectDir',
    'UniteWithInputDirectory',
    'UniteWithCursorWord',
  ]
  complete = 'customlist,unite#complete#source'

[[plugins]]
repository = 'Shougo/unite-help'
depends = 'Shougo/unite.vim'
unite_sources = ['help']

[[plugins]]
repository = 'Shougo/unite-outline'
depends = 'Shougo/unite.vim'
unite_sources = ['outline']

[[plugins]]
repository = 'Shougo/neomru.vim'
depends = 'Shougo/unite.vim'
unite_sources = [
  'neomru/file', 'file_mru',
  'neomru/directory', 'directory_mru'
]

##############################################################################
# Text Objects

[[plugins]]
repository = 'kana/vim-textobj-user'

[[plugins]]
repository = 'kana/vim-textobj-line' # al  il

[[plugins]]
repository = 'kana/vim-textobj-entire' # ae  ie

[[plugins]]
repository = 'saaguero/vim-textobj-pastedtext' # gb

[[plugins]]
repository = 'kana/vim-textobj-lastpat' # a/  i/  a?  i?

[[plugins]]
repository = 'kana/vim-textobj-indent' # ai  ii  aI  iI

[[plugins]]
repository = 'thinca/vim-textobj-between' # af{char}  if{char}  (region between {char}s)

[[plugins]]
repository = 'beloglazov/vim-textobj-quotes' # aq  iq

[[plugins]]
repository = 'rhysd/vim-textobj-anyblock' # ab  ib  (quotes, (), {}, [] and <>)

[[plugins]]
repository = 'kana/vim-textobj-function' # aF  iF

[[plugins]]
repository = 'sgur/vim-textobj-parameter' # a,  i,

[[plugins]]
repository = 'glts/vim-textobj-comment' # ac  ic

[[plugins]]
repository = 'Julian/vim-textobj-variable-segment' # av  iv  (word_in_identifier; camelCaseToo)

[[plugins]]
repository = 'whatyouhide/vim-textobj-xmlattr' # ax  ix


##############################################################################
# Editing and Formatting

[[plugins]]
repository = 'godlygeek/tabular'

[[plugins]]
repository = 'tpope/vim-endwise' # auto-closes control blocks in insert mode

[[plugins]]
repository = 'Raimondi/delimitMate' # auto-closes quotes, parens, etc. in insert mode

[[plugins]]
repository = 'tpope/vim-commentary.git' # toggle comments with gc{textobj}

[[plugins]]
repository = 'tommcdo/vim-exchange' # swap text objects using cx{textobj} two times

[[plugins]]
repository = 'tpope/vim-abolish'
depends = 'tpope/vim-repeat'
commands = ['Abolish', 'Subvert', 'S'] # :Subvert is a powerful search/replace command
mappings = 'cr' # crs to_snake, crm ToMixed, crc toCamel, cru TO_UPPERCASE

[[plugins]]
repository = 'kana/vim-operator-user'

[[plugins]]
repository = 'kana/vim-operator-replace' # <C-p> pastes over textobjs
depends = 'kana/vim-operator-user'
mappings = ['<C-p>', '<Plug>']

[[plugins]]
repository = 'rhysd/vim-operator-surround'
depends = 'kana/vim-operator-user'
mappings = '<Plug>'

[[plugins]]
repository = 'terryma/vim-multiple-cursors' # <C-n> creates multiple cursors in normal mode

[[plugins]]
repository = 'junegunn/vim-easy-align'
mappings = '<Plug>(EasyAlign)'

[[plugins]]
repository = 'Chiel92/vim-autoformat' # integrates external formatting tools
disabled = 1


##############################################################################
# Code Completion and Snippets

[[plugins]]
repository = 'SirVer/ultisnips'
unite_sources = ['ultisnips']
insert = 1

[[plugins]]
repository = 'Valloric/YouCompleteMe'
build = './install.py --clang-completer --system-libclang --system-boost' # On OSX: brew install boost-python
insert = 1

[[plugins]]
repository = 'rdnetto/YCM-Generator'
commands = ['YcmGenerateConfig', 'CCGenerateConfig']


##############################################################################
# Git

[[plugins]]
repository = 'tpope/vim-fugitive'
augroup = 'fugitive'
commands = [
  'Git', 'Git!', 'Gcd', 'Glcd', 'Gstatus', 'Gcommit', 'Gmerge', 'Gpull',
  'Gpush', 'Gfetch', 'Ggrep', 'Glgrep', 'Glog', 'Gllog', 'Gedit', 'Gsplit',
  'Gvsplit', 'Gtabedit', 'Gpedit', 'Gsplit!', 'Gvsplit!', 'Gtabedit!',
  'Gpedit!', 'Gread', 'Gread!', 'Gwrite', 'Gwrite', 'Gwq', 'Gwq!', 'Gdiff',
  'Gsdiff', 'Gvdiff', 'Gmove', 'Gremove', 'Gblame',
]

[[plugins]]
repository = 'airblade/vim-gitgutter'
commands = ['GitGutterToggle']


##############################################################################
# Testing

[[plugins]]
repository = 'janko-m/vim-test'
commands = ['TestNearest', 'TestFile', 'TestSuite', 'TestLast', 'TestVisit']


##############################################################################
# Code Analysis

[[plugins]]
repository = 'scrooloose/syntastic'
insert = 1

##############################################################################
# C, C++ and Objective C

[[plugins]]
repository = 'rhysd/vim-clang-format'
depends = 'kana/vim-operator-user'
commands = ['ClangFormat', 'ClangFormatAutoToggle']
mappings = '<Plug>(operator-clang-format)'

[[plugins]]
repository = 'jeaye/color_coded'
filetypes = ['c', 'cpp', 'objc', 'objcpp']
build_commands = ['cmake', 'make']
vim_version = '7.4.330'
disabled = """
!has('lua') || (exists('g:disable_color_coded') && g:disable_color_coded)"""
gui = 1
build = 'cmake . && make && make install'


##############################################################################
# JavaScript

[[plugins]]
repository = 'pangloss/vim-javascript'
filetypes = 'javascript'

[[plugins]]
repository = 'marijnh/tern_for_vim'
filetypes = 'javascript'
build = 'npm install'

[[plugins]]
repository = 'othree/javascript-libraries-syntax.vim'
filetypes = 'javascript'

[[plugins]]
repository = 'elzr/vim-json'
filetypes = ['javascript', 'json']

[[plugins]]
repository = 'mxw/vim-jsx'
filetypes = 'javascript'
disabled = 1


##############################################################################
# Lua

[[plugins]]
repository = 'tbastos/vim-lua'
filetypes = 'lua'


##############################################################################
# Text / Markup / Web

[[plugins]]
repository = 'cespare/vim-toml'
filetypes = 'toml'

[[plugins]]
repository = 'rcmdnk/vim-markdown'
filetypes = 'markdown'

[[plugins]]
repository = 'kannokanno/previm'
commands = 'PrevimOpen'

[[plugins]]
repository = 'othree/html5.vim'
filetypes = 'html'

[[plugins]]
repository = 'ap/vim-css-color'
filetypes = ['css','scss','sass','less']

[[plugins]]
repository = 'hail2u/vim-css3-syntax'
filetypes = ['css','scss','sass']

